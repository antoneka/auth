syntax = "proto3";

package user_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/antoneka/auth/pkg/user_v1;user_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "User API"
    version: "1.0.0"
    contact: {
      name: "antoneka"
      email: "aeho11@mail.ru"
    };
  };

  host: "localhost:8080",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

// UserV1 is a service for user authentication.
service UserV1 {
  // Create creates a new user.
  rpc Create(CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/user/v1",
      body: "*"
    };
  }

  // Get gets information about the user.
  rpc Get(GetRequest) returns (GetResponse){
    option (google.api.http) = {
      get: "/user/v1"
    };
  }

  // Update updates user information.
  rpc Update(UpdateRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      patch: "/user/v1",
      body: "*"
    };
  }

  // Delete deletes the user from the system.
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/user/v1"
    };
  }
}

enum Role {
  UNKNOWN_CHANGE_TYPE = 0;
  // USER represents a regular user.
  USER = 1;
  // ADMIN represents an administrator.
  ADMIN = 2;
}

message CreateRequest {
  // Name of the user to create.
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 20}];
  // Email of the user to create.
  string email = 2 [(validate.rules).string.email = true];
  // Password of the user to create.
  string password = 3 [(validate.rules).string = {min_len: 1, max_len: 20}];
  // Role of the user to create.
  Role role = 4;
}

message CreateResponse {
  // ID of the created user.
  int64 id = 1;
}

message GetRequest {
  // ID of the user to get the information for.
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

message GetResponse {
  // User ID.
  int64 id = 1;
  // Name of the user.
  string name = 2;
  // Email of the user.
  string email = 3;
  // Role of the user.
  Role role = 4;
  // Time when the user was created.
  google.protobuf.Timestamp created_at = 5;
  // Time when the user was last updated.
  google.protobuf.Timestamp updated_at = 6;
}

message UpdateRequest {
  // ID of the user to update the information for.
  int64 id = 1 [(validate.rules).int64.gt = 0];
  // New name of the user.
  optional string name = 2 [(validate.rules).string = {min_len: 1, max_len: 20}];
  // New email of the user.
  optional string email = 3 [(validate.rules).string.email = true];
  // New password of the user.
  optional string password = 4 [(validate.rules).string = {min_len: 1, max_len: 20}];
  // New role of the user.
  optional Role role = 5;
}

message DeleteRequest {
  // ID of the user to be deleted from the system.
  int64 id = 1 [(validate.rules).int64.gt = 0];
}
